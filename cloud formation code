AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC with public and private subnets

Resources:
  # Create VPC
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties: 
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "MyVPC"

  # Create an Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
  
  # Attach Internet Gateway to the VPC
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Create a public subnet
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ""
      Tags:
        - Key: "Name"
          Value: "PublicSubnet"

  # Create a private subnet
  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.2.0/24"
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ""
      Tags:
        - Key: "Name"
          Value: "PrivateSubnet"

  # Create a Route Table for the public subnet
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "PublicRouteTable"

  # Create a Route for Internet access in the public route table
  PublicRoute:
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  # Associate the public route table with the public subnet
  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Create a NAT Gateway in the public subnet
  NATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt ElasticIPForNAT.AllocationId
      SubnetId: !Ref PublicSubnet

  # Allocate an Elastic IP for the NAT Gateway
  ElasticIPForNAT:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  # Create a Route Table for the private subnet
  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "PrivateRouteTable"

  # Create a Route for Internet access in the private route table via NAT
  PrivateRoute:
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NATGateway

  # Associate the private route table with the private subnet
  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: The ID of the created VPC
    Value: !Ref MyVPC
  PublicSubnetId:
    Description: The ID of the public subnet
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: The ID of the private subnet
    Value: !Ref PrivateSubnet
